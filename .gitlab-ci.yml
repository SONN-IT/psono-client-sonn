variables:
  CONTAINER_TEST_IMAGE: psono-docker-local.jfrog.io/psono/psono-client:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: psono-docker-local.jfrog.io/psono/psono-client:latest

stages:
  - test
  - build
  - release
  - deploy

unittests:
  except:
    - schedules
  stage: test
  image: ubuntu:16.04
  script:
    - sh ./var/build-ubuntu.sh
    - apt-get install -y --no-install-recommends xvfb x11vnc fluxbox xterm
    - curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list
    - apt-get update
    - apt-get install -y google-chrome-stable
    - karma start ./unittests/karma-chrome-headless.conf.js

linter:
  except:
    - schedules
  stage: test
  image: ubuntu:16.04
  script:
    - sh ./var/build-ubuntu.sh
    - cat ./build/firefox/manifest.json
    - addons-linter --help
    - addons-linter ./build/firefox


docker-image:
  except:
    - schedules
  stage: build
  image: ubuntu:16.04
  services:
    - docker:dind
  variables:
    DOCKER_HOST: 'tcp://docker:2375'
  script:
    - sh ./var/build-ubuntu.sh
    - set -x && curl -fSL "https://download.docker.com/linux/static/stable/x86_64/docker-17.12.0-ce.tgz" -o docker.tgz && echo "692e1c72937f6214b1038def84463018d8e320c8eaf8530546c84c2f8f9c767d *docker.tgz" | sha256sum -c - && tar -xzvf docker.tgz && mv docker/* /usr/local/bin/
    - docker info
    - echo $CI_BUILD_TOKEN | docker login --username=gitlab-ci-token --password-stdin registry.gitlab.com
    - echo $artifactory_credentials | docker login --username=gitlab --password-stdin psono-docker.jfrog.io
    - echo $artifactory_credentials | docker login --username=gitlab --password-stdin psono-docker-local.jfrog.io
    - docker build -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

firefox-extension:
  except:
    - schedules
  stage: build
  image: ubuntu:16.04
  script:
    - pwd
    - ls -la
    - sh ./var/build-ubuntu.sh
    - mv /builds/psono/psono-client/build/firefox ../
    - rm -Rf *
    - rm -Rf .* 2> /dev/null || true
    - mv ../firefox/* ./
  artifacts:
    name: "firefox_$CI_BUILD_REF_NAME"
    paths:
    - ./*

chrome-extension:
  except:
    - schedules
  stage: build
  image: ubuntu:16.04
  script:
    - pwd
    - ls -la
    - sh ./var/build-ubuntu.sh
    - mv /builds/psono/psono-client/build/chrome ../
    - rm -Rf *
    - rm -Rf .* 2> /dev/null || true
    - mv ../chrome/* ./
  artifacts:
    name: "chrome_$CI_BUILD_REF_NAME"
    paths:
    - ./*

webclient:
  except:
    - schedules
  stage: build
  image: ubuntu:16.04
  script:
    - pwd
    - ls -la
    - sh ./var/build-ubuntu.sh
    - mv /builds/psono/psono-client/build/webclient ../
    - rm -Rf *
    - rm -Rf .* 2> /dev/null || true
    - mv ../webclient/* ./
  artifacts:
    name: "webclient_$CI_BUILD_REF_NAME"
    paths:
    - ./*

release-docker:
  except:
    - schedules
  stage: release
  image: docker:git
  services:
    - docker:dind
  script:
    - docker info
    - echo $CI_BUILD_TOKEN | docker login --username=gitlab-ci-token --password-stdin registry.gitlab.com
    - echo $artifactory_credentials | docker login --username=gitlab --password-stdin psono-docker.jfrog.io
    - echo $artifactory_credentials | docker login --username=gitlab --password-stdin psono-docker-local.jfrog.io
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/

deploy-security-scan-image:
  except:
    - schedules
  stage: deploy
  image: docker:git
  services:
    - docker:dind
  script:
    - sh ./var/deploy_security_scan_image.sh


deploy:
  except:
    - schedules
  stage: deploy
  image: docker:git
  services:
    - docker:dind
  script:
    - sh ./var/deploy.sh
  environment:
    name: production
    url: https://psono.pw
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/


deploy-chrome:
  except:
    - schedules
  stage: deploy
  image: ubuntu:16.04
  script:
    - sh ./var/build-ubuntu.sh
    - sh ./var/package-chrome-extension.sh
    - sh ./var/deploy-chrome-extension.sh
  environment:
    name: chrome-webstore
    url: https://chrome.google.com/webstore/detail/psonopw/eljmjmgjkbmpmfljlmklcfineebidmlo
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/

deploy-firefox:
  except:
    - schedules
  stage: deploy
  image: ubuntu:16.04
  script:
    - sh ./var/build-ubuntu.sh
    - sh ./var/package-firefox-extension.sh
    - sh ./var/deploy-firefox-extension.sh
  environment:
    name: firefox-webstore
    url: https://addons.mozilla.org/de/firefox/addon/psono-pw-password-manager/
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/

scheduled-linter:
  only:
    - schedules
  stage: test
  image: ubuntu:16.04
  script:
    - sh ./var/build-ubuntu.sh
    - cat ./build/firefox/manifest.json
    - addons-linter --help
    - addons-linter ./build/firefox
